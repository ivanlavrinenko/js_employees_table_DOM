{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAO,SAAS,aAAa,CAAC,OAEpC,CAAA,EAAK,SAAS,CAAG,oBAEjB,IAAM,EAAS,CACb,CACE,MAAO,SACP,KAAM,OACN,KAAM,OACN,GAAI,MACN,EACA,CACE,MAAO,aACP,KAAM,WACN,KAAM,OACN,GAAI,UACN,EACA,CACE,MAAO,WACP,KAAM,SACN,KAAM,SACN,GAAI,SACJ,QAAS,CACP,QACA,YACA,SACA,WACA,YACA,gBACD,AACH,EACA,CACE,MAAO,QACP,KAAM,MACN,KAAM,SACN,GAAI,KACN,EACA,CACE,MAAO,WACP,KAAM,SACN,KAAM,SACN,GAAI,QACN,EACD,CAED,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,IAII,EAJE,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,WAAW,CAAG,EAAM,KAAK,CAI3B,AAAe,WAAf,EAAM,IAAI,EACZ,EAAQ,SAAS,aAAa,CAAC,UAE/B,EAAM,OAAO,CAAC,OAAO,CAAC,SAAC,CAAvB,EACE,IAAM,EAAgB,SAAS,aAAa,CAAC,SAE7C,CAAA,EAAc,KAAK,CAAG,EAAO,WAAW,GACxC,EAAc,WAAW,CAAG,EAC5B,EAAM,GAAG,CAAC,EACZ,IAGA,AADA,CAAA,EAAQ,SAAS,aAAa,CAAC,QAA/B,EACM,IAAI,CAAG,EAAM,IAAI,CAGzB,EAAM,YAAY,CAAC,UAAW,EAAM,EAAE,EACtC,EAAM,QAAQ,CAAG,CAAA,EAEjB,EAAM,WAAW,CAAC,GAElB,EAAK,WAAW,CAAC,EACnB,GAEA,IAAM,EAAS,SAAS,aAAa,CAAC,UAyBtC,SAAS,EAAiB,CAAI,CAAE,CAAK,CAAE,CAAO,EAC5C,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,SAAS,CAAG,gBAAqB,MAAA,CAAL,GAEzC,IAAM,EAAe,SAAS,aAAa,CAAC,KAE5C,CAAA,EAAa,SAAS,CAAG,QACzB,EAAa,WAAW,CAAG,EAE3B,IAAM,EAAiB,SAAS,aAAa,CAAC,IAE9C,CAAA,EAAe,WAAW,CAAG,EAE7B,EAAa,WAAW,CAAC,GACzB,EAAa,WAAW,CAAC,GAEzB,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,WAAW,WACT,EAAa,MAAM,EACrB,EAAG,IACL,CA7CA,EAAO,IAAI,CAAG,SACd,EAAO,WAAW,CAAG,gBAErB,EAAO,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,EAAE,cAAc,GAEhB,IAAM,EAAW,CAAC,EAElB,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,IAAM,EAAQ,EAAK,aAAa,CAAE,aAAqB,MAAA,CAAT,EAAM,EAAE,CAAC,MAEnD,AAAe,CAAA,WAAf,EAAM,IAAI,CACZ,CAAQ,CAAC,EAAM,IAAI,CAAC,CAAG,EAAM,KAAK,CAElC,CAAQ,CAAC,EAAM,IAAI,CAAC,CAAG,EAAM,KAAK,CAAC,IAAI,EAE3C,GAEA,AA6BF,SAAsB,CAAI,EACxB,GACE,AAAC,EAAK,IAAI,EACT,EAAK,QAAQ,EACb,EAAK,MAAM,EACX,EAAK,GAAG,EACR,EAAK,MAAM,GACZ,CAAA,EAAK,IAAI,CAAC,MAAM,CAAG,CAAA,IACnB,CAAA,EAAK,GAAG,CAAG,EAAA,IACX,CAAA,EAAK,GAAG,CAAG,EAAA,EAGN,CACL,IAAM,EAAW,SAAS,aAAa,CAAC,MAExC,IAAK,IAAM,KAAO,EAAM,CACtB,IAAM,EAAS,SAAS,aAAa,CAAC,KAEtC,CAAA,EAAO,WAAW,CAAG,CAAI,CAAC,EAAI,CAC9B,EAAS,WAAW,CAAC,EACvB,CAEA,SAAS,aAAa,CAAC,SAAS,WAAW,CAAC,GAE5C,EACE,UACA,UACA,6DAEJ,MAlBE,EAAiB,QAAS,QAAS,0BAmBvC,EA3De,EACf,GAEA,EAAK,WAAW,CAAC,GA0DjB,EAAK,WAAW,CAAC,GAEjB,SAAS,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAjD,EACE,IAAI,EAAa,CAAA,EAEjB,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OAEzC,EAAe,SAAC,CAAA,CAAK,CAA3B,EACE,IAAM,EAAW,EAAI,KAAK,CAAC,EAAI,CAAC,SAAS,CAAC,IAAI,UAE9C,AAAI,AAAQ,IAAR,GAAa,AAAQ,IAAR,EACR,WAAW,EAAS,OAAO,CAAC,aAAc,KAG5C,CACT,CAEI,AAAe,EAAA,IAAf,EACF,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CADnB,EAEI,IAAM,EAAO,EAAa,EAAM,GAC1B,EAAO,EAAa,EAAM,GAEhC,OAAO,EAAO,EAAO,EAAI,EAAO,EAAO,GAAK,CAC9C,GAEA,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAO,EAAa,EAAM,GAC1B,EAAO,EAAa,EAAM,GAEhC,OAAO,EAAO,EAAO,EAAI,EAAO,EAAO,GAAK,CAC9C,GAGF,EAAa,CAAC,EAEd,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EACF,GAEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAQ,SAAS,aAAa,CAAC,SACjC,EAAc,KAElB,EAAM,gBAAgB,CAAC,WAAY,SAAC,CAApC,EACE,IAAM,EAAS,EAAE,MAAM,CAEvB,GAAI,AAAmB,OAAnB,EAAO,OAAO,EAAa,CAAC,EAAa,CAC3C,IAAM,EAAe,EAAO,WAAW,AAEvC,CAAA,EAAO,WAAW,CAAG,GAErB,IAAM,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,IAAI,CAAG,OACb,EAAM,SAAS,CAAG,aAClB,EAAM,KAAK,CAAG,EAEd,EAAO,WAAW,CAAG,GACrB,EAAO,WAAW,CAAC,GACnB,EAAM,KAAK,GACX,EAAc,EAEd,IAAM,EAAc,WAClB,IAAM,EAAW,EAAM,KAAK,CAAC,IAAI,EAEjC,CAAA,EAAO,WAAW,CAAG,GAAY,EACjC,EAAc,IAChB,EAEA,EAAM,gBAAgB,CAAC,OAAQ,GAE/B,EAAM,gBAAgB,CAAC,UAAW,SAAC,CAAnC,EACkB,UAAZ,EAAI,GAAG,EACT,GAEJ,EACF,CACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.querySelector(\"body\");\nvar form = document.createElement(\"form\");\nform.className = \"new-employee-form\";\nvar fields = [\n    {\n        label: \"Name: \",\n        name: \"name\",\n        type: \"text\",\n        qa: \"name\"\n    },\n    {\n        label: \"Position: \",\n        name: \"position\",\n        type: \"text\",\n        qa: \"position\"\n    },\n    {\n        label: \"Office: \",\n        name: \"office\",\n        type: \"select\",\n        qa: \"office\",\n        options: [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinburgh\",\n            \"San Francisco\"\n        ]\n    },\n    {\n        label: \"Age: \",\n        name: \"age\",\n        type: \"number\",\n        qa: \"age\"\n    },\n    {\n        label: \"Salary: \",\n        name: \"salary\",\n        type: \"number\",\n        qa: \"salary\"\n    }\n];\nfields.forEach(function(field) {\n    var label = document.createElement(\"label\");\n    label.textContent = field.label;\n    var input;\n    if (field.type === \"select\") {\n        input = document.createElement(\"select\");\n        field.options.forEach(function(option) {\n            var optionElement = document.createElement(\"option\");\n            optionElement.value = option.toLowerCase();\n            optionElement.textContent = option;\n            input.add(optionElement);\n        });\n    } else {\n        input = document.createElement(\"input\");\n        input.type = field.type;\n    }\n    input.setAttribute(\"data-qa\", field.qa);\n    input.required = true;\n    label.appendChild(input);\n    form.appendChild(label);\n});\nvar button = document.createElement(\"button\");\nbutton.type = \"submit\";\nbutton.textContent = \"Save to table\";\nbutton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    var formData = {};\n    fields.forEach(function(field) {\n        var input = form.querySelector('[data-qa=\"'.concat(field.qa, '\"]'));\n        if (input.type === \"select\") formData[field.name] = input.value;\n        else formData[field.name] = input.value.trim();\n    });\n    validateForm(formData);\n});\nform.appendChild(button);\nfunction showNotification(type, title, message) {\n    var notification = document.createElement(\"div\");\n    notification.className = \"notification \".concat(type);\n    var titleElement = document.createElement(\"h2\");\n    titleElement.className = \"title\";\n    titleElement.textContent = title;\n    var messageElement = document.createElement(\"p\");\n    messageElement.textContent = message;\n    notification.appendChild(titleElement);\n    notification.appendChild(messageElement);\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 2000);\n}\nfunction validateForm(data) {\n    if (!data.name || !data.position || !data.office || !data.age || !data.salary || data.name.length < 4 || data.age < 18 || data.age > 90) showNotification(\"error\", \"Error\", \"Check data for mistakes\");\n    else {\n        var newField = document.createElement(\"tr\");\n        for(var key in data){\n            var newCol = document.createElement(\"td\");\n            newCol.textContent = data[key];\n            newField.appendChild(newCol);\n        }\n        document.querySelector(\"tbody\").appendChild(newField);\n        showNotification(\"success\", \"Success\", \"New employee has been successfully inserted into the table\");\n    }\n}\nbody.appendChild(form);\ndocument.querySelectorAll(\"th\").forEach(function(header, index) {\n    var firstEvent = true;\n    header.addEventListener(\"click\", function() {\n        var tbody = document.querySelector(\"tbody\");\n        var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n        var getCellValue = function(row, idx) {\n            var cellText = row.cells[idx].innerText.trim();\n            if (idx === 2 || idx === 3) return parseFloat(cellText.replace(/[^0-9.-]+/g, \"\"));\n            return cellText;\n        };\n        if (firstEvent === true) rows.sort(function(rowA, rowB) {\n            var valA = getCellValue(rowA, index);\n            var valB = getCellValue(rowB, index);\n            return valA > valB ? 1 : valA < valB ? -1 : 0;\n        });\n        else rows.sort(function(rowA, rowB) {\n            var valA = getCellValue(rowA, index);\n            var valB = getCellValue(rowB, index);\n            return valB > valA ? 1 : valB < valA ? -1 : 0;\n        });\n        firstEvent = !firstEvent;\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var table = document.querySelector(\"table\");\n    var activeInput = null;\n    table.addEventListener(\"dblclick\", function(e) {\n        var target = e.target;\n        if (target.tagName === \"TD\" && !activeInput) {\n            var initialValue = target.textContent;\n            target.textContent = \"\";\n            var input = document.createElement(\"input\");\n            input.type = \"text\";\n            input.className = \"cell-input\";\n            input.value = initialValue;\n            target.textContent = \"\";\n            target.appendChild(input);\n            input.focus();\n            activeInput = input;\n            var saveChanges = function() {\n                var newValue = input.value.trim();\n                target.textContent = newValue || initialValue;\n                activeInput = null;\n            };\n            input.addEventListener(\"blur\", saveChanges);\n            input.addEventListener(\"keydown\", function(evt) {\n                if (evt.key === \"Enter\") saveChanges();\n            });\n        }\n    });\n});\n\n//# sourceMappingURL=index.32500e91.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nconst fields = [\n  {\n    label: 'Name: ',\n    name: 'name',\n    type: 'text',\n    qa: 'name',\n  },\n  {\n    label: 'Position: ',\n    name: 'position',\n    type: 'text',\n    qa: 'position',\n  },\n  {\n    label: 'Office: ',\n    name: 'office',\n    type: 'select',\n    qa: 'office',\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ],\n  },\n  {\n    label: 'Age: ',\n    name: 'age',\n    type: 'number',\n    qa: 'age',\n  },\n  {\n    label: 'Salary: ',\n    name: 'salary',\n    type: 'number',\n    qa: 'salary',\n  },\n];\n\nfields.forEach((field) => {\n  const label = document.createElement('label');\n\n  label.textContent = field.label;\n\n  let input;\n\n  if (field.type === 'select') {\n    input = document.createElement('select');\n\n    field.options.forEach((option) => {\n      const optionElement = document.createElement('option');\n\n      optionElement.value = option.toLowerCase();\n      optionElement.textContent = option;\n      input.add(optionElement);\n    });\n  } else {\n    input = document.createElement('input');\n    input.type = field.type;\n  }\n\n  input.setAttribute('data-qa', field.qa);\n  input.required = true;\n\n  label.appendChild(input);\n\n  form.appendChild(label);\n});\n\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nbutton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const formData = {};\n\n  fields.forEach((field) => {\n    const input = form.querySelector(`[data-qa=\"${field.qa}\"]`);\n\n    if (input.type === 'select') {\n      formData[field.name] = input.value;\n    } else {\n      formData[field.name] = input.value.trim();\n    }\n  });\n\n  validateForm(formData);\n});\n\nform.appendChild(button);\n\nfunction showNotification(type, title, message) {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n\n  const titleElement = document.createElement('h2');\n\n  titleElement.className = 'title';\n  titleElement.textContent = title;\n\n  const messageElement = document.createElement('p');\n\n  messageElement.textContent = message;\n\n  notification.appendChild(titleElement);\n  notification.appendChild(messageElement);\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n}\n\nfunction validateForm(data) {\n  if (\n    !data.name ||\n    !data.position ||\n    !data.office ||\n    !data.age ||\n    !data.salary ||\n    data.name.length < 4 ||\n    data.age < 18 ||\n    data.age > 90\n  ) {\n    showNotification('error', 'Error', 'Check data for mistakes');\n  } else {\n    const newField = document.createElement('tr');\n\n    for (const key in data) {\n      const newCol = document.createElement('td');\n\n      newCol.textContent = data[key];\n      newField.appendChild(newCol);\n    }\n\n    document.querySelector('tbody').appendChild(newField);\n\n    showNotification(\n      'success',\n      'Success',\n      'New employee has been successfully inserted into the table',\n    );\n  }\n}\n\nbody.appendChild(form);\n\ndocument.querySelectorAll('th').forEach((header, index) => {\n  let firstEvent = true;\n\n  header.addEventListener('click', () => {\n    const tbody = document.querySelector('tbody');\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n\n    const getCellValue = (row, idx) => {\n      const cellText = row.cells[idx].innerText.trim();\n\n      if (idx === 2 || idx === 3) {\n        return parseFloat(cellText.replace(/[^0-9.-]+/g, ''));\n      }\n\n      return cellText;\n    };\n\n    if (firstEvent === true) {\n      rows.sort((rowA, rowB) => {\n        const valA = getCellValue(rowA, index);\n        const valB = getCellValue(rowB, index);\n\n        return valA > valB ? 1 : valA < valB ? -1 : 0;\n      });\n    } else {\n      rows.sort((rowA, rowB) => {\n        const valA = getCellValue(rowA, index);\n        const valB = getCellValue(rowB, index);\n\n        return valB > valA ? 1 : valB < valA ? -1 : 0;\n      });\n    }\n\n    firstEvent = !firstEvent;\n\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const table = document.querySelector('table');\n  let activeInput = null;\n\n  table.addEventListener('dblclick', (e) => {\n    const target = e.target;\n\n    if (target.tagName === 'TD' && !activeInput) {\n      const initialValue = target.textContent;\n\n      target.textContent = '';\n\n      const input = document.createElement('input');\n\n      input.type = 'text';\n      input.className = 'cell-input';\n      input.value = initialValue;\n\n      target.textContent = '';\n      target.appendChild(input);\n      input.focus();\n      activeInput = input;\n\n      const saveChanges = () => {\n        const newValue = input.value.trim();\n\n        target.textContent = newValue || initialValue;\n        activeInput = null;\n      };\n\n      input.addEventListener('blur', saveChanges);\n\n      input.addEventListener('keydown', (evt) => {\n        if (evt.key === 'Enter') {\n          saveChanges();\n        }\n      });\n    }\n  });\n});\n"],"names":["body","document","querySelector","form","createElement","className","fields","label","name","type","qa","options","forEach","field","input","textContent","option","optionElement","value","toLowerCase","add","setAttribute","required","appendChild","button","showNotification","title","message","notification","concat","titleElement","messageElement","setTimeout","remove","addEventListener","e","preventDefault","formData","trim","validateForm","data","position","office","age","salary","length","newField","key","newCol","querySelectorAll","header","index","firstEvent","tbody","rows","Array","from","getCellValue","row","idx","cellText","cells","innerText","parseFloat","replace","sort","rowA","rowB","valA","valB","table","activeInput","target","tagName","initialValue","focus","saveChanges","newValue","evt"],"version":3,"file":"index.32500e91.js.map"}